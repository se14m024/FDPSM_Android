package com.fdpsm.exercise.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.fdpsm.exercise.dao.MovieQuery;
import com.fdpsm.exercise.dao.MovieResult;
import com.fdpsm.exercise.dao.MovieDetail;

import com.fdpsm.exercise.dao.MovieQueryDao;
import com.fdpsm.exercise.dao.MovieResultDao;
import com.fdpsm.exercise.dao.MovieDetailDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig movieQueryDaoConfig;
    private final DaoConfig movieResultDaoConfig;
    private final DaoConfig movieDetailDaoConfig;

    private final MovieQueryDao movieQueryDao;
    private final MovieResultDao movieResultDao;
    private final MovieDetailDao movieDetailDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        movieQueryDaoConfig = daoConfigMap.get(MovieQueryDao.class).clone();
        movieQueryDaoConfig.initIdentityScope(type);

        movieResultDaoConfig = daoConfigMap.get(MovieResultDao.class).clone();
        movieResultDaoConfig.initIdentityScope(type);

        movieDetailDaoConfig = daoConfigMap.get(MovieDetailDao.class).clone();
        movieDetailDaoConfig.initIdentityScope(type);

        movieQueryDao = new MovieQueryDao(movieQueryDaoConfig, this);
        movieResultDao = new MovieResultDao(movieResultDaoConfig, this);
        movieDetailDao = new MovieDetailDao(movieDetailDaoConfig, this);

        registerDao(MovieQuery.class, movieQueryDao);
        registerDao(MovieResult.class, movieResultDao);
        registerDao(MovieDetail.class, movieDetailDao);
    }
    
    public void clear() {
        movieQueryDaoConfig.getIdentityScope().clear();
        movieResultDaoConfig.getIdentityScope().clear();
        movieDetailDaoConfig.getIdentityScope().clear();
    }

    public MovieQueryDao getMovieQueryDao() {
        return movieQueryDao;
    }

    public MovieResultDao getMovieResultDao() {
        return movieResultDao;
    }

    public MovieDetailDao getMovieDetailDao() {
        return movieDetailDao;
    }

}
